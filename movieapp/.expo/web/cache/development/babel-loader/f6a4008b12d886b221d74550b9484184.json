{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var getYoutubeMeta = function getYoutubeMeta(videoId) {\n  var response;\n  return _regeneratorRuntime.async(function getYoutubeMeta$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://www.youtube.com/oembed?url=https://www.youtube.com/watch?v=\" + videoId + \"&format=json\"));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/Jonas/Desktop/React_Native/Reactseals-Movie-Review-Android-App/movieapp/node_modules/react-native-youtube-iframe/src/oEmbed.js"],"names":["getYoutubeMeta","videoId","fetch","response","json"],"mappings":";AAsDA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLC,KAAK,yEAC4CD,OAD5C,kBADA;;AAAA;AACtBE,UAAAA,QADsB;AAAA;AAAA,2CAIfA,QAAQ,CAACC,IAAT,EAJe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["/**\n * @typedef {Object} youtubeMeta\n * @property {String} author_name\n * @property {String} author_url\n * @property {Number} height\n * @property {String} html\n * @property {String} provider_name\n * @property {String} provider_url\n * @property {Number} thumbnail_height\n * @property {String} thumbnail_url\n * @property {Number} thumbnail_width\n * @property {String} title\n * @property {String} type\n * @property {String} version\n * @property {Number} width\n */\n\n/**\n * Fetch metadata of a youtube video using the oEmbed Spec -\n * https://oembed.com/#section7\n *\n * metadata -\n *\n * `thumbnail_url` - The url of the resource provider.\n *\n * `thumbnail_width` - The width of the video thumbnail.\n *\n * `thumbnail_height` - The height of the video thumbnail.\n *\n * `height` - The height in pixels required to display the HTML.\n *\n * `width` - The width in pixels required to display the HTML.\n *\n * `html` - The HTML required to embed a video player.\n *\n * `author_url` - youtube channel link of the video\n *\n * `title` - youtube video title\n *\n * `provider_name` - The name of the resource provider.\n *\n * `author_name` - The name of the author/owner of the video.\n *\n * `provider_url` - The url of the resource provider.\n *\n * `version` - The oEmbed version number.\n *\n * `type` - The resource type.\n *\n *\n *\n * @param {String} videoId - youtube video id\n * @returns {Promise<youtubeMeta>} A promise that resolves into an object with the video metadata\n */\nexport const getYoutubeMeta = async videoId => {\n  const response = await fetch(\n    `https://www.youtube.com/oembed?url=https://www.youtube.com/watch?v=${videoId}&format=json`,\n  );\n  return await response.json();\n};\n"]},"metadata":{},"sourceType":"module"}